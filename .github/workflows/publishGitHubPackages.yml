
name: Create and publish a Docker image to Github Packages if version is exist in commit message

on:
  # runs every day at 20:00 PM UTC
  #schedule:
  #  - cron: "0 20 * * *"
  push:
    branches: ['master']
    
env:
  REGISTRY: ghcr.io
  PROJECT_ID: marinosefstathiou/publish-to-grc
  ACTIONS_ALLOW_UNSECURE_COMMANDS: "true"
  KUBECONFIG_CONTENT: ${{ secrets.KUBECONFIG }}
  
jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
         token: ${{ secrets.GITHUBREPO }}
        
      - name: Extract version from commit message
        run: |
          # Get the latest commit message
          COMMIT_MESSAGE=$(git log -1 --pretty=%B)

          # Extract the version from the commit message
          # assuming the version is in the format v1.0.0
          REGEX="v[0-9]+\.[0-9]+\.[0-9]+"
          #if $COMMIT_MESSAGE.startsWith('version:') then
          if [[ $COMMIT_MESSAGE =~ $REGEX ]]; then
          export VERSION="${BASH_REMATCH[0]}"
          else
          echo "Error: Version not found in the commit message continuing to the next step"
          fi
          echo "Version: $VERSION"
          echo ::set-env name=NEW_VERSION::$VERSION
          
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUBREPO }}
      
      #takes version from a file
      #- name: Set image version from a file
      #  id: set-version
      #  run: echo ::set-env name=IMAGE_VERSION::$(cat Version.txt) 
        
      - name: Build Docker Image if version exist
        run: |
          docker build . --tag ghcr.io/marinosefstathiou/firstimage:${NEW_VERSION} || echo "Error: Version not found in the commit message docker build will not execute"
          docker push ghcr.io/marinosefstathiou/firstimage:${NEW_VERSION} || echo "Error: Version not found in the commit message docker push will not execute"    
          docker build -f Dockerfile.EF  --tag ghcr.io/marinosefstathiou/efimage:${NEW_VERSION} || echo "Error: Version not found in the commit message docker build will not execute"
          docker push ghcr.io/marinosefstathiou/efimage:${NEW_VERSION} || echo "Error: Version not found in the commit message docker push will not execute"

      - name: Replace image
        run: |
          echo "Current directory: $(pwd)"
          ls -la
          cd kubernetes
          sed -i "s/firstimage:.*/firstimage:${NEW_VERSION}/" Deployment.yaml
          
      - name: Commit and push changes
        if: env.NEW_VERSION != ''
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          token: ${{ secrets.GITHUBREPO }}
          commit_message: "Update deployment YAML with new version"
          branch: master
          
      #- name: Configure kubectl
      #  uses: azure/setup-kubectl@v1
      #  with:
      #    kubeconfig: ${{ env.KUBECONFIG_CONTENT }}
          
      #- name: Run database migrations
      #  run: |
      #    kubectl exec -it $(kubectl get pods -l app=kubetestapi-deployment -o jsonpath='{.items[0].metadata.name}') -- /bin/bash -c "dotnet ef database update --context WeatherDBContext"
